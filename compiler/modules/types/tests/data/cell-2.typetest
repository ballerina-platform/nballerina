(let ((int-cell (cell int none))
      (boolean-cell (cell boolean unlimited))
      (string-cell (cell string limited))
      (int-boolean-or-string-cell (cell (| int boolean string) unlimited)))
     (assert< (| int-cell boolean-cell string-cell) int-boolean-or-string-cell))

(let ((int-cell (cell int none))
      (boolean-cell (cell boolean unlimited))
      (string-cell (cell string limited))
      (int-boolean-or-string-cell (cell (| int boolean string) none)))
     (assert< int-boolean-or-string-cell (| int-cell boolean-cell string-cell)))

(let ((int-cell (cell int none))
      (boolean-cell (cell boolean unlimited))
      (string-cell (cell string limited))
      (int-boolean-or-string-cell (cell (| int boolean string) limited)))
     (assert<> (| int-cell boolean-cell string-cell) int-boolean-or-string-cell))

(let ((int-none-cell (cell int none))
      (int-limited-cell (cell int limited))
      (int-unlimited-cell (cell int unlimited)))
     (assert= (| int-none-cell int-limited-cell int-unlimited-cell) int-unlimited-cell))

(let ((int-none-cell (cell int none))
      (int-limited-cell (cell int limited))
      (int-unlimited-cell (cell int unlimited)))
     (assert< (& int-none-cell int-limited-cell int-unlimited-cell) int-unlimited-cell))

(let ((int-none-cell (cell int none))
      (int-limited-cell (cell int limited))
      (int-unlimited-cell (cell int unlimited)))
     (assert< (& int-none-cell int-limited-cell int-unlimited-cell) int-limited-cell))

(let ((int-none-cell (cell int none))
      (int-limited-cell (cell int limited))
      (int-unlimited-cell (cell int unlimited)))
     (assert= (& int-none-cell int-limited-cell int-unlimited-cell) int-none-cell))

(let ((int-none-cell (cell int none))
      (int-limited-cell (cell int limited))
      (byte-unlimited-cell (cell (int-range 0 255) unlimited))
      (byte-limited-cell (cell (int-range 0 255) limited)))
     (assert< (& int-none-cell int-limited-cell byte-unlimited-cell) byte-limited-cell))

(let ((int-none-cell (cell int none))
      (int-limited-cell (cell int limited))
      (boolean-limited-cell (cell boolean limited))
      (byte-limited-cell (cell (int-range 0 255) limited))
      (byte-none-cell (cell (int-range 0 255) none)))
     (assert= (& int-none-cell (| byte-limited-cell boolean-limited-cell)) byte-none-cell))
